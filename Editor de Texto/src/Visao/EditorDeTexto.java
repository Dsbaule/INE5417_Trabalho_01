/* --------------------------------------------------------------------------------
 * Autores:     Daniel de Souza Baulé
 *              Mirian de França Santos Pereira
 * Disciplina:  INE5417 - Engenharia de Software
 * Projeto:     Edito de Texto
-------------------------------------------------------------------------------- */
package Visao;

import Dados.Documento;
import Dados.Formatacao;
import Dados.INEdit;
import Dados.Usuario;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class EditorDeTexto extends javax.swing.JFrame {

    Usuario usuario;
    Documento documento;
    Formatacao formatacao;

    INEdit inedit;

    /**
     * Creates new form Tela_Principal
     */
    public EditorDeTexto() {
        inedit = new INEdit();

        initComponents();

        this.setTitle("INEdit");        // Altera o título
        this.barraMenu.setVisible(true);
        menuArquivo.setEnabled(false);
        menuUsuario.setEnabled(false);
        initPainelEscolheUsuario();
        this.setContentPane(PainelEscolheUsuario);
        this.pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JanelaEscolhePasta = new javax.swing.JFileChooser();
        PainelEscolheArquivo = new javax.swing.JPanel();
        textFieldNomeArquivo = new javax.swing.JTextField();
        botaoAdicionarArquivo = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        listaDeArquivos = new javax.swing.JList<>();
        botaoSelecionarArquivo = new javax.swing.JButton();
        botaoImportarArquivo = new javax.swing.JButton();
        PainelEdicaoTexto = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AreaDoTexto = new javax.swing.JTextArea();
        PainelEscolheUsuario = new javax.swing.JPanel();
        textFieldNomeUsuario = new javax.swing.JTextField();
        botaoAdicionarUsuario = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        listaDeUsuarios = new javax.swing.JList<>();
        botaoSelecionarUsuario = new javax.swing.JButton();
        textFieldSelecioneUsuario = new javax.swing.JTextField();
        PainelEscolheFormatacao = new javax.swing.JPanel();
        botaoAdicionarFormatacao = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        listaDeFormatacoes = new javax.swing.JList<>();
        botaoSelecionarFormatacao = new javax.swing.JButton();
        textFieldSelecioneUsuario1 = new javax.swing.JTextField();
        janelaFonte = new javax.swing.JFrame();
        comboBoxFonte = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        textFieldTamanhoFormatacao = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboBoxCorFonte = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        comboBoxCorFundo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        textFieldNomeFormatacao = new javax.swing.JTextField();
        botaoCadastraFonte = new javax.swing.JButton();
        JanelaEscolheArquivo = new javax.swing.JFileChooser();
        barraMenu = new javax.swing.JMenuBar();
        menuUsuario = new javax.swing.JMenu();
        menuBotaoAlterarUsuario = new javax.swing.JMenuItem();
        menuArquivo = new javax.swing.JMenu();
        menuBotaoAbrir = new javax.swing.JMenuItem();
        menuFormatacao = new javax.swing.JMenuItem();
        menuBotaoSalvar = new javax.swing.JMenuItem();
        menuINEdit = new javax.swing.JMenu();
        menuBotaoSobre = new javax.swing.JMenuItem();
        menuBotaoAjuda = new javax.swing.JMenuItem();

        JanelaEscolhePasta.setDialogTitle("Seleção de Pasta");
        JanelaEscolhePasta.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        JanelaEscolhePasta.setToolTipText("Selecione a pasta onde sera criado o novo arquivo.");

        PainelEscolheArquivo.setMinimumSize(new java.awt.Dimension(500, 500));

        textFieldNomeArquivo.setText("Nome");
        textFieldNomeArquivo.setPreferredSize(new java.awt.Dimension(500, 50));
        textFieldNomeArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldNomeArquivoActionPerformed(evt);
            }
        });

        botaoAdicionarArquivo.setText("Adicionar Arquivo");
        botaoAdicionarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAdicionarArquivoActionPerformed(evt);
            }
        });

        listaDeArquivos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane5.setViewportView(listaDeArquivos);

        botaoSelecionarArquivo.setText("Selecionar Arquivo");
        botaoSelecionarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSelecionarArquivoActionPerformed(evt);
            }
        });

        botaoImportarArquivo.setText("Importar");
        botaoImportarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoImportarArquivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PainelEscolheArquivoLayout = new javax.swing.GroupLayout(PainelEscolheArquivo);
        PainelEscolheArquivo.setLayout(PainelEscolheArquivoLayout);
        PainelEscolheArquivoLayout.setHorizontalGroup(
            PainelEscolheArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelEscolheArquivoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelEscolheArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botaoSelecionarArquivo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PainelEscolheArquivoLayout.createSequentialGroup()
                        .addComponent(textFieldNomeArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoAdicionarArquivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoImportarArquivo, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                    .addComponent(jScrollPane5))
                .addContainerGap())
        );
        PainelEscolheArquivoLayout.setVerticalGroup(
            PainelEscolheArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelEscolheArquivoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelEscolheArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botaoAdicionarArquivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textFieldNomeArquivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoImportarArquivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoSelecionarArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        AreaDoTexto.setColumns(20);
        AreaDoTexto.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        AreaDoTexto.setLineWrap(true);
        AreaDoTexto.setRows(5);
        AreaDoTexto.setTabSize(4);
        jScrollPane1.setViewportView(AreaDoTexto);

        javax.swing.GroupLayout PainelEdicaoTextoLayout = new javax.swing.GroupLayout(PainelEdicaoTexto);
        PainelEdicaoTexto.setLayout(PainelEdicaoTextoLayout);
        PainelEdicaoTextoLayout.setHorizontalGroup(
            PainelEdicaoTextoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );
        PainelEdicaoTextoLayout.setVerticalGroup(
            PainelEdicaoTextoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
        );

        PainelEscolheUsuario.setMinimumSize(new java.awt.Dimension(500, 500));

        textFieldNomeUsuario.setEditable(false);
        textFieldNomeUsuario.setText("Nome");
        textFieldNomeUsuario.setPreferredSize(new java.awt.Dimension(500, 50));
        textFieldNomeUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldNomeUsuarioActionPerformed(evt);
            }
        });

        botaoAdicionarUsuario.setText("Adicionar Usuário");
        botaoAdicionarUsuario.setEnabled(false);

        listaDeUsuarios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaDeUsuarios.setToolTipText("");
        listaDeUsuarios.setAutoscrolls(false);
        jScrollPane6.setViewportView(listaDeUsuarios);

        botaoSelecionarUsuario.setText("Selecionar Usuário");
        botaoSelecionarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSelecionarUsuarioActionPerformed(evt);
            }
        });

        textFieldSelecioneUsuario.setEditable(false);
        textFieldSelecioneUsuario.setText("Selecione um Usuario:");
        textFieldSelecioneUsuario.setBorder(null);

        javax.swing.GroupLayout PainelEscolheUsuarioLayout = new javax.swing.GroupLayout(PainelEscolheUsuario);
        PainelEscolheUsuario.setLayout(PainelEscolheUsuarioLayout);
        PainelEscolheUsuarioLayout.setHorizontalGroup(
            PainelEscolheUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelEscolheUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelEscolheUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textFieldSelecioneUsuario)
                    .addComponent(jScrollPane6)
                    .addComponent(botaoSelecionarUsuario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PainelEscolheUsuarioLayout.createSequentialGroup()
                        .addComponent(textFieldNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoAdicionarUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PainelEscolheUsuarioLayout.setVerticalGroup(
            PainelEscolheUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelEscolheUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelEscolheUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botaoAdicionarUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textFieldNomeUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldSelecioneUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoSelecionarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        PainelEscolheFormatacao.setMinimumSize(new java.awt.Dimension(500, 500));

        botaoAdicionarFormatacao.setText("Adicionar Formatação");
        botaoAdicionarFormatacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAdicionarFormatacaoActionPerformed(evt);
            }
        });

        listaDeFormatacoes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaDeFormatacoes.setToolTipText("");
        listaDeFormatacoes.setAutoscrolls(false);
        jScrollPane7.setViewportView(listaDeFormatacoes);

        botaoSelecionarFormatacao.setText("Selecionar Formatação");
        botaoSelecionarFormatacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSelecionarFormatacaoActionPerformed(evt);
            }
        });

        textFieldSelecioneUsuario1.setEditable(false);
        textFieldSelecioneUsuario1.setText("Selecione uma Formatação:");
        textFieldSelecioneUsuario1.setBorder(null);
        textFieldSelecioneUsuario1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldSelecioneUsuario1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PainelEscolheFormatacaoLayout = new javax.swing.GroupLayout(PainelEscolheFormatacao);
        PainelEscolheFormatacao.setLayout(PainelEscolheFormatacaoLayout);
        PainelEscolheFormatacaoLayout.setHorizontalGroup(
            PainelEscolheFormatacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelEscolheFormatacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelEscolheFormatacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textFieldSelecioneUsuario1)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                    .addComponent(botaoSelecionarFormatacao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoAdicionarFormatacao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        PainelEscolheFormatacaoLayout.setVerticalGroup(
            PainelEscolheFormatacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelEscolheFormatacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botaoAdicionarFormatacao, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldSelecioneUsuario1, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoSelecionarFormatacao, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        janelaFonte.setTitle("Cadastro de Fonte");
        janelaFonte.setMaximumSize(new java.awt.Dimension(418, 230));
        janelaFonte.setMinimumSize(new java.awt.Dimension(418, 230));
        janelaFonte.setPreferredSize(new java.awt.Dimension(418, 230));
        janelaFonte.setResizable(false);

        comboBoxFonte.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxFonte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxFonteActionPerformed(evt);
            }
        });

        jLabel1.setText("Tamanho:");

        textFieldTamanhoFormatacao.setText("12");

        jLabel2.setText("Fonte:");

        jLabel3.setText("Cor Fonte:");

        comboBoxCorFonte.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Cor Fundo:");

        comboBoxCorFundo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Nome:");

        botaoCadastraFonte.setText("OK");
        botaoCadastraFonte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastraFonteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout janelaFonteLayout = new javax.swing.GroupLayout(janelaFonte.getContentPane());
        janelaFonte.getContentPane().setLayout(janelaFonteLayout);
        janelaFonteLayout.setHorizontalGroup(
            janelaFonteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(janelaFonteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(janelaFonteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botaoCadastraFonte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(janelaFonteLayout.createSequentialGroup()
                        .addGroup(janelaFonteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(janelaFonteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBoxFonte, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textFieldTamanhoFormatacao)))
                    .addGroup(janelaFonteLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxCorFonte, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, janelaFonteLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxCorFundo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(janelaFonteLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldNomeFormatacao, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)))
                .addContainerGap())
        );
        janelaFonteLayout.setVerticalGroup(
            janelaFonteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(janelaFonteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(janelaFonteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldNomeFormatacao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(janelaFonteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxFonte, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(janelaFonteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldTamanhoFormatacao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(janelaFonteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxCorFonte, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(janelaFonteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxCorFundo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoCadastraFonte)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        JanelaEscolheArquivo.setCurrentDirectory(new java.io.File("C:\\"));
            JanelaEscolheArquivo.setDialogTitle("Seleção de Arquivo");
            JanelaEscolheArquivo.setFileFilter(new FiltroArquivo());
            JanelaEscolheArquivo.setToolTipText("Selecione o arquivo .txt a ser aberto.");

            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

            menuUsuario.setText("Usuário");

            menuBotaoAlterarUsuario.setText("Alterar Usuário");
            menuBotaoAlterarUsuario.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    menuBotaoAlterarUsuarioActionPerformed(evt);
                }
            });
            menuUsuario.add(menuBotaoAlterarUsuario);

            barraMenu.add(menuUsuario);

            menuArquivo.setText("Arquivo");

            menuBotaoAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
            menuBotaoAbrir.setText("Trocar");
            menuBotaoAbrir.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    menuBotaoAbrirActionPerformed(evt);
                }
            });
            menuArquivo.add(menuBotaoAbrir);

            menuFormatacao.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
            menuFormatacao.setText("Alterar Formatação");
            menuFormatacao.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    menuFormatacaoActionPerformed(evt);
                }
            });
            menuArquivo.add(menuFormatacao);

            menuBotaoSalvar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
            menuBotaoSalvar.setText("Salvar");
            menuBotaoSalvar.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    menuBotaoSalvarActionPerformed(evt);
                }
            });
            menuArquivo.add(menuBotaoSalvar);

            barraMenu.add(menuArquivo);

            menuINEdit.setText("INEdit");

            menuBotaoSobre.setText("Sobre");
            menuBotaoSobre.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    menuBotaoSobreActionPerformed(evt);
                }
            });
            menuINEdit.add(menuBotaoSobre);

            menuBotaoAjuda.setText("Ajuda");
            menuBotaoAjuda.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    menuBotaoAjudaActionPerformed(evt);
                }
            });
            menuINEdit.add(menuBotaoAjuda);

            barraMenu.add(menuINEdit);

            setJMenuBar(barraMenu);

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 500, Short.MAX_VALUE)
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 454, Short.MAX_VALUE)
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    //! Botão para abertura de um arquivo
    private void menuBotaoAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBotaoAbrirActionPerformed
        initPainelEscolheArquivo();
        this.setContentPane(PainelEscolheArquivo);
        this.pack();
    }//GEN-LAST:event_menuBotaoAbrirActionPerformed

    //! Botão para salvar o arquivo
    private void menuBotaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBotaoSalvarActionPerformed
        documento.setTexto(AreaDoTexto.getText());   // Alteração do texto do documento
        documento.salvaDocumento(); // Salvar o documento
        JOptionPane.showMessageDialog(this, "Arquivo Salvo");   // Mostrar um diálogo para confirmação do salvamento do arquivo
    }//GEN-LAST:event_menuBotaoSalvarActionPerformed

    private void menuBotaoSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBotaoSobreActionPerformed
        TelaSobre telaSobre = new TelaSobre();
        telaSobre.setLocationRelativeTo(this);
        telaSobre.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        telaSobre.pack();
        telaSobre.setVisible(true);    }//GEN-LAST:event_menuBotaoSobreActionPerformed

    private void menuBotaoAjudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBotaoAjudaActionPerformed
        TelaAjuda telaAjuda = new TelaAjuda();
        telaAjuda.setLocationRelativeTo(this);
        telaAjuda.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        telaAjuda.setVisible(true);
    }//GEN-LAST:event_menuBotaoAjudaActionPerformed

    private void textFieldNomeArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldNomeArquivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldNomeArquivoActionPerformed

    private void textFieldNomeUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldNomeUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldNomeUsuarioActionPerformed

    private void botaoSelecionarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSelecionarUsuarioActionPerformed
        usuario = inedit.retornaUsuario(listaDeUsuarios.getSelectedValue());

        initPainelEscolheArquivo();
        this.setContentPane(PainelEscolheArquivo);
        this.pack();
    }//GEN-LAST:event_botaoSelecionarUsuarioActionPerformed

    private void botaoSelecionarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSelecionarArquivoActionPerformed
        if (listaDeArquivos.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(this, "Nenhum Arquivo selecionado!", "Arquivo Invalido", JOptionPane.ERROR_MESSAGE);   // Mostrar um diálogo para confirmação do salvamento do arquivo
        } else {
            documento = inedit.retornaDocumento(listaDeArquivos.getSelectedValue());
            formatacao = inedit.retornaFormatacao(documento.getFormatacao().getNomeFormatacao());

            initEditorDeTexto();
            barraMenu.setVisible(true);
            this.setContentPane(PainelEdicaoTexto);
            this.pack();
        }
    }//GEN-LAST:event_botaoSelecionarArquivoActionPerformed

    private void menuBotaoAlterarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBotaoAlterarUsuarioActionPerformed
        initPainelEscolheUsuario();
        this.setContentPane(PainelEscolheUsuario);
        this.pack();
    }//GEN-LAST:event_menuBotaoAlterarUsuarioActionPerformed

    private void botaoAdicionarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAdicionarArquivoActionPerformed
        String nomeDocumento = textFieldNomeArquivo.getText();
        documento = inedit.retornaDocumento(nomeDocumento);

        if (documento != null) {
            JOptionPane.showMessageDialog(this, "Documento já existente!", "Nome Inválido", JOptionPane.ERROR_MESSAGE);   // Mostrar um diálogo para confirmação do salvamento do arquivo
        } else {
            int returnVal = JanelaEscolhePasta.showOpenDialog(this);    // Obtem a pasta para criação do novo arquivo através de um dialogo do sistema
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                System.out.println("Aprovado!");
                documento = new Documento(nomeDocumento, JanelaEscolhePasta.getSelectedFile().getPath().concat("\\").concat(nomeDocumento).concat(".txt"), usuario, inedit.retornaFormatacao("Padrao"));
                formatacao = null;
                initPainelEscolheFormatacao();
                this.setContentPane(PainelEscolheFormatacao);
                this.pack();
            } else {
                System.out.println("Acesso cancelado pelo usuário!");
            }
        }
    }//GEN-LAST:event_botaoAdicionarArquivoActionPerformed

    private void botaoSelecionarFormatacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSelecionarFormatacaoActionPerformed
        formatacao = inedit.retornaFormatacao(listaDeFormatacoes.getSelectedValue());
        documento.setFormatacao(formatacao);
        inedit.cadastraDocumento(documento);
        
        updateFormatacao();
        barraMenu.setVisible(true);
        this.setContentPane(PainelEdicaoTexto);
        this.pack();
    }//GEN-LAST:event_botaoSelecionarFormatacaoActionPerformed

    private void textFieldSelecioneUsuario1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldSelecioneUsuario1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldSelecioneUsuario1ActionPerformed

    private void menuFormatacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFormatacaoActionPerformed
        initPainelEscolheFormatacao();
        this.setContentPane(PainelEscolheFormatacao);
        this.pack();
    }//GEN-LAST:event_menuFormatacaoActionPerformed

    private void botaoAdicionarFormatacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAdicionarFormatacaoActionPerformed
        initJanelaFonte();
        janelaFonte.setVisible(true);
        janelaFonte.setAlwaysOnTop(true);
    }//GEN-LAST:event_botaoAdicionarFormatacaoActionPerformed

    private void comboBoxFonteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxFonteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxFonteActionPerformed

    private void botaoCadastraFonteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCadastraFonteActionPerformed
        String nomeFormatacao = textFieldNomeFormatacao.getText();
        formatacao = inedit.retornaFormatacao(nomeFormatacao);

        if (formatacao != null) {
            JOptionPane.showMessageDialog(this, "Fomatação já existente!", "Nome Inválido", JOptionPane.ERROR_MESSAGE);   // Mostrar um diálogo para confirmação do salvamento do arquivo
        } else {
            int fonte = comboBoxCorFonte.getSelectedIndex();
            int tamanho =  Integer.parseInt(textFieldTamanhoFormatacao.getText());
            int corFonte = comboBoxCorFonte.getSelectedIndex();
            int corFundo = comboBoxCorFundo.getSelectedIndex();
            System.out.println(String.format("%s %d %d %d %d", nomeFormatacao, tamanho, fonte, corFonte, corFundo));
            formatacao = new Formatacao(nomeFormatacao, tamanho, fonte, corFonte, corFundo);
            inedit.cadastraFormatacao(formatacao);
            documento.setFormatacao(formatacao);
            inedit.cadastraDocumento(documento);
        }
        
        janelaFonte.setVisible(false);
        updateFormatacao();
        barraMenu.setVisible(true);
        this.setContentPane(PainelEdicaoTexto);
        this.pack();
    }//GEN-LAST:event_botaoCadastraFonteActionPerformed

    private void botaoImportarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoImportarArquivoActionPerformed
        int returnVal = JanelaEscolheArquivo.showOpenDialog(this);    // Obtem o caminho para o arquivo a ser aberto através de um diálogo do sistema
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = JanelaEscolheArquivo.getSelectedFile();  // Lê o documento selecionado
            String nome = file.getName().replace(".txt", "");
            String path = file.getAbsolutePath();
            documento = inedit.retornaDocumento(nome);
            
            if (documento != null) {
                JOptionPane.showMessageDialog(this, "Documento já existente!", "Nome Inválido", JOptionPane.ERROR_MESSAGE);   // Mostrar um diálogo para confirmação do salvamento do arquivo
            } else {
                System.out.println("Aprovado!");
                documento = new Documento(nome, path, usuario);
                formatacao = null;
                updateTexto();
                initPainelEscolheFormatacao();
                this.setContentPane(PainelEscolheFormatacao);
                this.pack();
            }
            
            
        } else {
            System.out.println("Acesso cancelado pelo usuário!");
        }    }//GEN-LAST:event_botaoImportarArquivoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditorDeTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditorDeTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditorDeTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorDeTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditorDeTexto().setVisible(true);
            }
        });
    }
    
    private void initPainelEscolheUsuario() {
        menuUsuario.setEnabled(false);
        menuArquivo.setEnabled(false);
        menuFormatacao.setEnabled(false);
        
        String[] usuarios = inedit.retornaUsuarios();

        DefaultListModel model = new DefaultListModel();

        if (usuarios != null) {
            for (String usuario : usuarios) {
                model.addElement(usuario);
            }
        }

        listaDeUsuarios.setModel(model);
        listaDeUsuarios.setSelectedIndex(0);
    }

    private void initPainelEscolheArquivo() {
        menuUsuario.setEnabled(true);
        menuArquivo.setEnabled(false);
        menuFormatacao.setEnabled(false);
        
        Documento[] arquivos = inedit.retornaDocumentos(usuario);
        
        DefaultListModel modelDocumentos = new DefaultListModel();
        
        if (arquivos != null) {
            for (Documento arquivo : arquivos) {
                modelDocumentos.addElement(arquivo.getNomeDocumento());//.concat(" (").concat(arquivo.getFilePath()).concat(")"));
            }
        }

        listaDeArquivos.setModel(modelDocumentos);
        listaDeArquivos.setSelectedIndex(0);
    }
    
    private void initPainelEscolheFormatacao() {
        menuUsuario.setEnabled(true);
        menuArquivo.setEnabled(true);
        menuFormatacao.setEnabled(false);
        
        Formatacao[] formatacoes = inedit.retornaFormatacoes();
        DefaultListModel model = new DefaultListModel();
        
        if (formatacoes != null) {
            for (Formatacao formatacao : formatacoes) {
                model.addElement(formatacao.getNomeFormatacao());
            }
        }

        listaDeFormatacoes.setModel(model);
        listaDeFormatacoes.setSelectedIndex(0);
    }
    
    private void initJanelaFonte() {
        String[] fontes = Formatacao.getFontes();
        comboBoxFonte.removeAllItems();
        for (String fonte : fontes)
            comboBoxFonte.addItem(fonte);
        
        String[] cores = Formatacao.getCores();
        comboBoxCorFonte.removeAllItems();
        comboBoxCorFundo.removeAllItems();
        for (String cor : cores) {
            comboBoxCorFonte.addItem(cor);
            comboBoxCorFundo.addItem(cor);
        }
        
        janelaFonte.setVisible(true);
    }

    private void initEditorDeTexto() {
        updateTexto();
        updateFormatacao();
    }
    
    private void updateTexto() {
        menuUsuario.setEnabled(true);
        menuArquivo.setEnabled(true);
        menuFormatacao.setEnabled(true);
        
        AreaDoTexto.setFont(new Font("Comic Sans", Font.ITALIC, 20));
        AreaDoTexto.setBackground(Color.BLACK);
        AreaDoTexto.setForeground(Color.WHITE);
        
        documento.leDocumento();
        AreaDoTexto.setText(documento.getTexto());
    }
    
    private void updateFormatacao() {
        menuUsuario.setEnabled(true);
        menuArquivo.setEnabled(true);
        menuFormatacao.setEnabled(true);
        
        AreaDoTexto.setFont(formatacao.getFormatedFont());
        AreaDoTexto.setBackground(formatacao.getBackgroundCollor());
        AreaDoTexto.setForeground(formatacao.getFontCollor());
    }

    private Usuario criaNovoUsuario() {
        Usuario usuarioCriado = null;
        while (usuarioCriado == null) {
            String nomeUsuario = JOptionPane.showInputDialog(this, "Nome do Usuario:", "Novo Usuario", JOptionPane.PLAIN_MESSAGE);  // Obtem o nome para o novo Usuario;
            if (inedit.retornaUsuario(nomeUsuario) == null) {
                inedit.cadastraUsuario(new Usuario(nomeUsuario));
                usuarioCriado = inedit.retornaUsuario(nomeUsuario);
            }
        }
        return usuarioCriado;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaDoTexto;
    private javax.swing.JFileChooser JanelaEscolheArquivo;
    private javax.swing.JFileChooser JanelaEscolhePasta;
    private javax.swing.JPanel PainelEdicaoTexto;
    private javax.swing.JPanel PainelEscolheArquivo;
    private javax.swing.JPanel PainelEscolheFormatacao;
    private javax.swing.JPanel PainelEscolheUsuario;
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JButton botaoAdicionarArquivo;
    private javax.swing.JButton botaoAdicionarFormatacao;
    private javax.swing.JButton botaoAdicionarUsuario;
    private javax.swing.JButton botaoCadastraFonte;
    private javax.swing.JButton botaoImportarArquivo;
    private javax.swing.JButton botaoSelecionarArquivo;
    private javax.swing.JButton botaoSelecionarFormatacao;
    private javax.swing.JButton botaoSelecionarUsuario;
    private javax.swing.JComboBox<String> comboBoxCorFonte;
    private javax.swing.JComboBox<String> comboBoxCorFundo;
    private javax.swing.JComboBox<String> comboBoxFonte;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JFrame janelaFonte;
    private javax.swing.JList<String> listaDeArquivos;
    private javax.swing.JList<String> listaDeFormatacoes;
    private javax.swing.JList<String> listaDeUsuarios;
    private javax.swing.JMenu menuArquivo;
    private javax.swing.JMenuItem menuBotaoAbrir;
    private javax.swing.JMenuItem menuBotaoAjuda;
    private javax.swing.JMenuItem menuBotaoAlterarUsuario;
    private javax.swing.JMenuItem menuBotaoSalvar;
    private javax.swing.JMenuItem menuBotaoSobre;
    private javax.swing.JMenuItem menuFormatacao;
    private javax.swing.JMenu menuINEdit;
    private javax.swing.JMenu menuUsuario;
    private javax.swing.JTextField textFieldNomeArquivo;
    private javax.swing.JTextField textFieldNomeFormatacao;
    private javax.swing.JTextField textFieldNomeUsuario;
    private javax.swing.JTextField textFieldSelecioneUsuario;
    private javax.swing.JTextField textFieldSelecioneUsuario1;
    private javax.swing.JTextField textFieldTamanhoFormatacao;
    // End of variables declaration//GEN-END:variables
}

//! Filtro para arquivos .txt
class FiltroArquivo extends javax.swing.filechooser.FileFilter {

    @Override
    public boolean accept(File file) {
        return file.isDirectory() || file.getAbsolutePath().endsWith(".txt");
    }

    @Override
    public String getDescription() {
        return "Text documents (*.txt)";
    }
}
